package com.baohulu.framework.common;

import com.baohulu.framework.common.utils.StringUtils;
import org.junit.Test;

import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * @author heqing
 * @date 2022/10/18 15:57
 */
public class TestString {

    @Test
    public void mapString() {
        Map<String, String> map = new HashMap<>(2);
        map.put("name", "Ë¥∫Â∞èÁôΩ");
        map.put("address", "246512");

        String str = StringUtils.mapToHttpString(map);
        System.out.println("--> " + str);

        Map<String, String> newMap = StringUtils.httpStringToMap(str);
        System.out.println("--> " + newMap);
    }

    @Test
    public void url() {
        String str = "name=Ë¥∫Â∞èÁôΩ&address=246512";

        String newStr = StringUtils.urlEncode(str);
        System.out.println("--> " + newStr);

        str = StringUtils.urlDecode(newStr);
        System.out.println("--> " + str);
    }

    @Test
    public void list() {
        String str = "Ë¥∫Â∞èÁôΩ,246512";

        List<String> list = StringUtils.stringToList(str);
        System.out.println("list --> " + list);

        str = StringUtils.listToString(list);
        System.out.println("str --> " + str);
    }

    @Test
    public void unicodeToString() {
        String unicode = "# \\u53C2\\u8003";
        String str = StringUtils.unicodeToString(unicode);
        System.out.println("--> " + str);
    }

    @Test
    public void filterEmoji() {
        String source = "‰Ω†Â•ΩüòÄÔºÅ";
        String str = StringUtils.filterEmoji(source);
        System.out.println("--> " + str);
    }

    @Test
    public void parse() {
        String source = "Á¨¨{}Êù°{}ÔºåÂá∫Áé∞{}";
        String str = StringUtils.parse(source, 1, "Êï∞ÊçÆ", "Ëß£ÊûêÈîôËØØ!");
        System.out.println("--> " + str);
    }

    @Test
    public void handle() {
        String query = "HeQingÔºå‰Ω†ÈÇÑÊ¨†Êàë ^ 50.2ÂÖÉÈå¢!";

        String result = StringUtils.extractChinese(query);
        System.out.println("ÊèêÂèñ‰∏≠Êñá -->" + result);

        result = StringUtils.removeNotDigitAlphaChinese(query);
        System.out.println("ÂâîÈô§Èùû(Êï∞Â≠ó„ÄÅÂ≠óÊØçÂíå‰∏≠Êñá) -->" + result);

        result = StringUtils.replaceNotDigitAlphaChineseCharsWithSpace(query);
        System.out.println("ÂâîÈô§Èùû(Êï∞Â≠ó„ÄÅÂ≠óÊØçÂíå‰∏≠Êñá)ÔºåÂä†Á©∫Ê†º -->" + result);

        result = StringUtils.replaceNotWordWithStr(query, " ");
        System.out.println("Á¨¶Âè∑Áî®ÊåáÂÆöÁ¨¶Âè∑ÊõøÊç¢ -->" + result);

        result = StringUtils.removeSpace(query);
        System.out.println("Âà†Èô§Á©∫Ê†º -->" + result);

        result = StringUtils.removePunctuation(query);
        System.out.println("Âà†Èô§Á¨¶Âè∑ -->" + result);

        result = StringUtils.removePunctions(query);
        System.out.println("Âà†Èô§Á¨¶Âè∑Ôºå‰øùÁïôÂ∞èÊï∞ÁÇπ -->" + result);

        result = StringUtils.replacePunctionsWithSpace(query);
        System.out.println("Á©∫Ê†ºÊõøÊç¢Á¨¶Âè∑Ôºå‰øùÁïôÂ∞èÊï∞ÁÇπ -->" + result);

        result = StringUtils.removeSpaceNotWithinEnglishOrDigit(query);
        System.out.println("Âà†Èô§Á©∫Ê†ºÔºå‰øùÁïôÂ∞èÊï∞ÁÇπ -->" + result);

        int length = StringUtils.lengthOf(query);
        System.out.println("Â≠óÁ¨¶‰∏≤ÈïøÂ∫¶ -->" + length);

        result = StringUtils.cutoff(query, 7, true);
        System.out.println("Êà™Êñ≠Â≠óÁ¨¶‰∏≤ -->" + result);
    }

    /**
     * ËøõÂÖ•ÊêúÁ¥¢Ê®°ÂùóÁöÑqueryÁöÑÊúÄÂ§ßÈïøÂ∫¶ÔºåÂ¶ÇÊûúË∂ÖËøáËØ•ÈïøÂ∫¶ÔºåÂàôËøõË°åÊà™Êñ≠
     */
    private static final int MAXLENGTH_QUERY = 50;

    @Test
    public void normalizeQuery() {
        String query = "HeQingÔºå‰Ω†ÈÇÑÊ¨†Êàë^50.2ÂÖÉÈå¢!";

        //ÁπÅ‰ΩìËΩ¨ÁÆÄ‰ΩìÔºåÂÖ®ËßíËΩ¨ÂçäËßíÔºåÂ§ßÂÜôËΩ¨Â∞èÂÜôÔºåÂéªÊéâÁ¨¶Âè∑
        String normalized = StringUtils.normalize(query, true);
        System.out.println("-->" + normalized);

        normalized = StringUtils.normalServerString(query);
        System.out.println("-->" + normalized);

        normalized = StringUtils.normalTrainString(query);
        System.out.println("-->" + normalized);

        //Êà™Êñ≠queryÔºåÊúÄÈïø10‰∏™ÂçïËØçÔºå‰∏Ä‰∏™‰∏≠ÊñáÂ≠óÁ¨¶‰∏∫‰∏Ä‰∏™ÂçïËØçÔºå‰∏Ä‰∏™Êï∞Â≠ó‰∏≤‰∏∫‰∏Ä‰∏™ÂçïËØçÔºå‰∏Ä‰∏™Ëã±ÊñáÂ≠óÁ¨¶‰∏≤‰∏∫‰∏Ä‰∏™ÂçïËØç
        normalized = StringUtils.cutoff(normalized, MAXLENGTH_QUERY, true);

        System.out.println("-->" + normalized);
    }

    @Test
    public void firstChar() {
        String name = "Ë¥∫Â∞èÁôΩ";
        System.out.println("--> " + StringUtils.firstChar(name));
    }
}
